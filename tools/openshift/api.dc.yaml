---
apiVersion: v1
kind: Template
labels:
    template: "${REPO_NAME}-template"
metadata:
    name: "${REPO_NAME}-${JOB_NAME}-dc"
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels: 
      app: "${APP_NAME}-${JOB_NAME}"
    name: "${APP_NAME}-${JOB_NAME}"
  spec:
    replicas: 2
    selector:
      app: "${APP_NAME}-${JOB_NAME}"
      deploymentConfig: "${APP_NAME}-${JOB_NAME}"
    strategy:
      resources: {}
      type: Rolling
    template:
      metadata:
        labels:
          app: "${APP_NAME}-${JOB_NAME}"
          deploymentConfig: "${APP_NAME}-${JOB_NAME}"
      spec:
        containers:
        - image: docker-registry.default.svc:5000/${NAMESPACE}/${REPO_NAME}-${JOB_NAME}:${TAG}
          imagePullPolicy: IfNotPresent
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 2
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            exec:
              command:
                - cd
                - ..
            initialDelaySeconds: 15
            timeoutSeconds: 1
          name: "${APP_NAME}-${JOB_NAME}"
          ports:
          - containerPort: ${{CONTAINER_PORT}}
            protocol: TCP
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames: 
        - "${APP_NAME}-${JOB_NAME}"
        from:
          kind: ImageStreamTag
          name: "${REPO_NAME}-${JOB_NAME}:${TAG}"
          namespace: "${NAMESPACE}"
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: "${APP_NAME}-${JOB_NAME}"
    name: "${APP_NAME}-${JOB_NAME}"
  spec:
    ports:
    - name: ${CONTAINER_PORT}-tcp
      port: ${{CONTAINER_PORT}}
      protocol: TCP
    selector:
      app: "${APP_NAME}-${JOB_NAME}"
      deploymentconfig: "${APP_NAME}-${JOB_NAME}"
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: "${APP_NAME}-${JOB_NAME}"
    name: "${APP_NAME}-${JOB_NAME}"
  spec:
    host: "${HOST_ROUTE}"
    path: ${HOST_PATH}
    port:
      targetPort: ${CONTAINER_PORT}-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: "${APP_NAME}-${JOB_NAME}"
      weight: 100
    wildcardPolicy: None
parameters:
- name: REPO_NAME
  description: Application repository name
  required: true
- name: JOB_NAME
  description: Job identifier (i.e. 'backend' OR 'frontend')
  required: true
- name: NAMESPACE
  description: Target namespace reference (i.e. 'k8vopl-dev')
  required: true
- name: APP_NAME
  description: Application name
  required: true
- name: HOST_ROUTE
  description: The host the route will use to expose service outside cluster 
  required: true
- name: CONTAINER_PORT
  description: The port on which the application will be accessible
  value: "8080"
  required: false
- name: TAG
  description: The identifying tag for this specific deployment
  required: true
- name: HOST_PATH
  description: The path appended to the HOST_ROUTE where the root of this project will be served
  value: "/"
  required: false
