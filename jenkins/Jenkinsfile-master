pipeline {
	agent any

    stages {
        stage ('Initialize') {
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }
        stage ('Build') {
            steps {
                echo 'Building....'
                script{
                    openshift.withCluster(){
                        openshift.withProject(){
                            try{
                                def bcApi = openshift.process('-f', 'tools/openshift/api-jenkinsfile.bc.yaml')
                                openshift.apply(bcApi).narrow('bc').startBuild('-w').logs('-f')
                            } catch(e) {
                                echo "Backend build failed"
                                throw e
                            }
                        }
                    }
                }
            }
        }
        stage('Test') {
            steps {
                echo 'Testing..'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
                script{
                    openshift.withCluster(){
                        openshift.withProject(){
                            openshift.tag("educ-pen-api:latest", "educ-pen-api:dev")
                        }
                    }
                }
            }
        }
    }
}
